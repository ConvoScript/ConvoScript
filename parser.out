Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    EQUALS
    NEWLINE
    RECEIVE
    SEMI
    SEND

Grammar

Rule 0     S' -> function
Rule 1     function -> OPEN LPAREN RPAREN
Rule 2     function -> CLOSE LPAREN RPAREN
Rule 3     function -> JOIN LPAREN IP RPAREN
Rule 4     data -> STRING
Rule 5     data -> WORD
Rule 6     data -> INTEGER

Terminals, with rules where they appear

CLOSE                : 2
COMMA                : 
EQUALS               : 
INTEGER              : 6
IP                   : 3
JOIN                 : 3
LPAREN               : 1 2 3
NEWLINE              : 
OPEN                 : 1
RECEIVE              : 
RPAREN               : 1 2 3
SEMI                 : 
SEND                 : 
STRING               : 4
WORD                 : 5
error                : 

Nonterminals, with rules where they appear

data                 : 
function             : 0

Parsing method: LALR

state 0

    (0) S' -> . function
    (1) function -> . OPEN LPAREN RPAREN
    (2) function -> . CLOSE LPAREN RPAREN
    (3) function -> . JOIN LPAREN IP RPAREN

    OPEN            shift and go to state 2
    CLOSE           shift and go to state 3
    JOIN            shift and go to state 4

    function                       shift and go to state 1

state 1

    (0) S' -> function .



state 2

    (1) function -> OPEN . LPAREN RPAREN

    LPAREN          shift and go to state 5


state 3

    (2) function -> CLOSE . LPAREN RPAREN

    LPAREN          shift and go to state 6


state 4

    (3) function -> JOIN . LPAREN IP RPAREN

    LPAREN          shift and go to state 7


state 5

    (1) function -> OPEN LPAREN . RPAREN

    RPAREN          shift and go to state 8


state 6

    (2) function -> CLOSE LPAREN . RPAREN

    RPAREN          shift and go to state 9


state 7

    (3) function -> JOIN LPAREN . IP RPAREN

    IP              shift and go to state 10


state 8

    (1) function -> OPEN LPAREN RPAREN .

    $end            reduce using rule 1 (function -> OPEN LPAREN RPAREN .)


state 9

    (2) function -> CLOSE LPAREN RPAREN .

    $end            reduce using rule 2 (function -> CLOSE LPAREN RPAREN .)


state 10

    (3) function -> JOIN LPAREN IP . RPAREN

    RPAREN          shift and go to state 11


state 11

    (3) function -> JOIN LPAREN IP RPAREN .

    $end            reduce using rule 3 (function -> JOIN LPAREN IP RPAREN .)

